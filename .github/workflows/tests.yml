name: Tests
on: [ pull_request ]
jobs:
  rust:
    strategy:
      matrix:
        rust: [ stable, nightly ]
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - id: versions
        run: |
          echo "rust=$(rustc --version 2>&1|sed -E 's/^rustc [[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ \(([[:digit:][:lower:]]+) [[:digit:]]+-[[:digit:]]+-[[:digit:]]+\)$/\1/')" >> $GITHUB_OUTPUT
          echo "yarncachedir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/cache@v3
        id: rust-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: rust-${{ runner.os }}-${{ steps.versions.outputs.rust }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.versions.outputs.yarncachedir }}
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock')}}

      - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
        if: matrix.os == 'windows-latest'

      - run: sudo apt update && sudo apt install libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
        if: matrix.os == 'ubuntu-latest'

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}-x86_64-pc-windows-gnu
        if: matrix.os == 'windows-latest'

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
        if: matrix.os == 'ubuntu-latest'

      - uses: rui314/setup-mold@v1

      - run: cd src-tauri && cargo test
        shell: bash
        env:
          RUST_BACKTRACE: full
